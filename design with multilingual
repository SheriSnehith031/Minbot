<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>4-color Layout</title>
    <style>
        .container {
            display: flex;
            height: 100vh;
        }

        .left {
            flex: 20%;
            background-color: #2f373a;
            color: white;
            padding-left: 20px;
            padding-right: 20px;
        }

        .language-selector {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
        }

        .language-selector label {
            color: white;
            margin-right: 10px;
        }

        .language-selector select {
            padding: 5px;
        }

        .right {
            flex: 80%;
            background-color:white;
        }

        .bottom-left-text {
            position: absolute;
            bottom: 15px;
            left: 0;
            color: white;
            padding-left: 50px;
        }

        body {
            display: flex;
            height: 900vh;
            margin: 0;
        }

        .center-image {
            position: absolute;
            top: 0;
            left: 56%;
            transform: translateX(-50%);
            width: 20%;
            margin: auto;
        }

        .context-area {
            position: absolute;
            top: 30%;
            left: 55.5%;
            transform: translateX(-50%);
            width: 66.5%;
            height: 50%;
            background-color:white;
            color: black;
            padding: 10px;
            font-size: 21px;
            text-align: center;
            border-radius: 8px;
            overflow-y: auto;
            max-height: 60vh;
            display: flex;
            flex-direction: column; /* Display messages in a column */
            align-items: flex-start; /* Align messages to the left */
        }

        .search-bar {
            position: absolute;
            bottom: 58px;
            left: 57%;
            transform: translateX(-50%);
            width: 77%;
            background-color: #f2f2f2;
            padding: 0px;
            display: flex;
            align-items: center;
        }

        #search-input {
            flex: 1;
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        #search-button,
        #microphone-button {
            margin-left: 1px;
            padding: 8px;
            border: 1px solid #ccc;
            border-radius: 4px;
            cursor: pointer;
            background-color: #a6a6a6;
            color: white;
        }

        #microphone-button {
            background-color: #f44336;
        }

        #search-button:hover,
        #microphone-button:hover {
            background-color: #2f373a;
        }

        /* Added styles for the chat messages */
        .user-message,
        .bot-message {
            margin: 5px;
            padding: 10px;
            border-radius: 8px;
            max-width: 80%;
        }

        .user-message {
            background-color: #3498db;
            color: #fff;
            align-self: flex-start; /* Align user messages to the left */
            padding-left: 11px;
        }

        .bot-message {
            background-color: #b8c0c6;
            color: #000;
            align-self: flex-end; /* Align bot messages to the right */
            padding-right: 20px;
        }
        html, body {
            overflow: hidden;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="left">
            <h1> NewChat </h1>
            <div class="language-selector">
                <label for="language">Select Language:</label>
                <select id="language">
                    <option value="english">English</option>
                    <option value="Hindi">Hindi</option>
                    <option value="Tamil">Tamil</option>
                    <option value="Marati">Marati</option>
                    <option value="Telugu">Telugu</option>
                    <option value="Bengali">Bengali</option>
                    <!-- Add more language options as needed -->
                </select>
            </div>
            <div class="context-area" id="context-area"></div>
        </div>
        <div class="right"></div>
        <div class="bottom-left-text">MINBOT</div>
        <img src="./minbot (1).png" alt="Your Image" class="center-image">
        <div class="search-bar">
            <input type="text" id="search-input" placeholder="Type your message...">
            <button id="search-button"><i class="fa fa-search"></i></button>
            <button id="microphone-button"><i class="fa fa-microphone"></i></button>
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
        </div>
    </div>
    <script>
        const searchInput = document.getElementById('search-input');
        const searchButton = document.getElementById('search-button');
        const contextArea = document.getElementById('context-area');
        const micButton = document.getElementById('microphone-button');
        const recognition = new webkitSpeechRecognition();

        searchButton.addEventListener('click', handleUserInput);
        micButton.addEventListener('click', startSpeechRecognition);

        recognition.onresult = function (event) {
            const result = event.results[0][0].transcript;
            searchInput.value = result;
            handleUserInput();
        };

        recognition.onerror = function (event) {
            console.error('Speech recognition error:', event.error);
        };

        recognition.onend = function () {
            alert('Speech recognition completed!');
        };

        function startSpeechRecognition() {
            recognition.start();
        }

        function handleUserInput() {
            const userMessage = searchInput.value.trim();
            if (userMessage !== '') {
                appendMessage('user', userMessage);
                searchInput.value = '';
                const botResponse = simulateBotResponse(userMessage);
                appendMessage('bot', botResponse);
            }
        }

        function appendMessage(sender, message) {
            const messageElement = document.createElement('div');
            messageElement.className = sender === 'user' ? 'user-message' : 'bot-message';
            messageElement.textContent = message;
            contextArea.appendChild(messageElement);
            contextArea.scrollTop = contextArea.scrollHeight;
        }

        function simulateBotResponse(userMessage) {
            const language = document.getElementById('language').value;
            // Example translations
            const translations = {
                'english': 'It shall come into force on...',
                'Hindi': 'yah is din se laagoo hoga...',
                'Tamil': 'Itu amalukku varum...',
                'Marati': 'te lagu hoila...',
                'Telugu': 'Idhi pravesindhipotundhi...',
                'Bengali': 'Eta karyakara habe...'
                // Add more translations as needed
            };
            return translations[language];
        }
    </script>
</body>

</html>
